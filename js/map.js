var map = new Array();
for (a = 0; a < 429; a++ ){
	map[a] = new Array();
}
map[0].position = [98.165, 63];
map[0].adjacent = [1, 124];
map[1].position = [126.869, 67.251];
map[1].adjacent = [2, 123, 0];
map[2].position = [150.71, 54.925];
map[2].adjacent = [3, 121, 1];
map[3].position = [164.142,31.381];
map[3].adjacent = [4, 2];
map[3].number = 1;
map[3].lantern = [119, 121];
map[4].position = [188.66, 34.386];
map[4].adjacent = [5, 119, 3];
map[5].position = [258.914, 34.524];
map[5].adjacent = [6, 112, 4];
map[6].position = [282.194, 22.621];
map[6].adjacent = [7, 5];
map[6].number = 2;
map[7].position = [309.28, 24.517];
map[7].adjacent = [8, 117, 6];
map[8].position = [340.925, 23.545];
map[8].adjacent = [9, 7];
map[8].number = 3;
map[8].lantern = [72, 118];
map[9].position = [372.387, 24.132];
map[9].adjacent = [10, 72, 8];
map[10].position = [461.444, 24.359];
map[10].adjacent = [11, 9];
map[10].number = 5;
map[10].lantern = [70, 72];
map[11].position = [490.261, 39.543];
map[11].adjacent = [12, 69, 10];
map[12].position = [546.599, 67.586];
map[12].adjacent = [13, 53, 11];
map[13].position = [572.554, 64.29];
map[13].adjacent = [14, 51, 12];
map[14].position = [588.906, 62.847];
map[14].adjacent = [15, 45, 13];
map[14].number = 17;
map[14].lantern = [46, 51];
map[15].position = [622.286, 64.033];
map[15].adjacent = [16, 45, 14];
map[16].position = [671.469, 65.016];
map[16].adjacent = [17, 41, 15];
map[16].number = 18;
map[16].lantern = [42, 40, 44];
map[17].position = [696.94, 64.214];
map[17].adjacent = [18, 16];
map[18].position = [747.718, 67.589];
map[18].adjacent = [19, 42, 17];
map[18].lantern = [40, 44];
map[19].position = [754.303, 86.433];
map[19].adjacent = [35, 18];
map[19].number = 20;
map[19].lantern = [34, 36, 38, 40, 42];
map[20].position = [806.944, 87.611];
map[20].adjacent = [21, 32, 35];
map[21].position = [827.062, 74.644];
map[21].adjacent = [22, 30, 20];
map[22].position = [868.772, 57.553];
map[22].adjacent = [23, 21];
map[22].number = 21;
map[22].lantern = [25, 27, 29];
map[23].position = [909.549, 39.867];
map[23].adjacent = [24, 22];
map[24].position = [963.538, 19.789];
map[24].adjacent = [25, 23];
map[25].position = [980.337, 67.292];
map[25].adjacent = [26, 24];
map[25].number = 23;
map[25].lantern = [27, 29, 22];
map[26].position = [930.754, 95.759];
map[26].adjacent = [25, 157, 27];
map[27].position = [908.884, 103.268];
map[27].adjacent = [26, 28];
map[27].number = 22;
map[27].lantern = [29, 22, 25];
map[28].position = [888.595, 110.915];
map[28].adjacent = [27, 29];
map[29].position = [848.228, 125.95];
map[29].adjacent = [28, 31, 30];
map[29].number = 42;
map[29].lantern = [32, 22, 25, 27];
map[30].adjacent = [29, 21];
map[31].position = [825.677, 134.792];
map[31].adjacent = [29, 163, 33, 32];
map[32].position = [816.665, 112.495];
map[32].adjacent = [31, 20];
map[32].number = 41;
map[32].lantern = [29, 34];
map[33].position = [774.733, 153.397];
map[33].adjacent = [31, 164, 36, 34];
map[34].position = [767.333, 128.309];
map[34].adjacent = [33, 35];
map[34].number = 40;
map[34].lantern = [32, 36, 38, 40, 42, 19];
map[35].position = [760.848, 103.999];
map[35].adjacent = [20, 34, 19];
map[36].position = [732.006, 171.448];
map[36].adjacent = [33, 37];
map[36].number = 57;
map[36].lantern = [165, 168, 170, 172, 174, 38, 40, 42, 19, 34];
map[37].position = [704.635, 184.141];
map[37].adjacent = [36, 38];
map[38].position = [676.369, 197.637];
map[38].adjacent = [37, 59, 39];
map[38].number = 56;
map[38].lantern = [42, 19, 34, 36, 165, 168, 170, 172, 174, 57, 47, 40];
map[39].adjacent = [38, 40];
map[40].position = [642.441, 136.911];
map[40].adjacent = [41, 39, 43];
map[40].number = 39;
map[40].lantern = [16, 42, 19, 34, 36, 38, 57, 47, 44];
map[41].position = [679.795, 109.281];
map[41].adjacent = [42, 40, 16];
map[42].adjacent = [18, 41];
map[42].number = 19;
map[42].lantern = [19, 34, 36, 38, 40, 16];
map[43].position = [625.004, 148.268];
map[43].adjacent = [40, 47, 44];
map[44].adjacent = [43, 45];
map[44].number = 38;
map[44].lantern = [16, 40, 47, 49, 46];
map[45].position = [615.168, 112];
map[45].adjacent = [44, 46, 14, 15];
map[46].position = [599.905, 114.916];
map[46].adjacent = [45, 50];
map[46].number = 36;
map[46].lantern = [44, 47, 49, 51, 14];
map[47].position = [611.247, 157.965];
map[47].adjacent = [43, 48];
map[47].number = 37;
map[47].lantern = [44, 40, 38, 57, 49, 46];
map[48].position = [597.12, 167.249];
map[48].adjacent = [47, 56, 49];
map[49].adjacent = [48, 50];
map[49].number = 35;
map[49].lantern = [46, 44, 47, 54];
map[50].position = [584.605, 118.051];
map[50].adjacent = [46, 49, 52, 51];
map[51].adjacent = [50, 13];
map[51].number = 16;
map[51].lantern = [14, 46, 53];
map[52].position = [558.304, 124.615];
map[52].adjacent = [50, 54, 55, 53];
map[53].adjacent = [52, 12];
map[53].number = 15;
map[53].lantern = [51, 55, 66, 68];
map[54].adjacent = [56, 52];
map[54].number = 34;
map[55].position = [542.201, 129.768];
map[55].adjacent = [52, 65];
map[55].number = 33;
map[56].position = [573.632, 182.684];
map[56].adjacent = [48, 57, 63, 54];
map[57].adjacent = [58, 56];
map[57].number = 55;
map[58].position = [604.667, 233.718];
map[58].adjacent = [59, 60, 57];
map[59].position = [640.359, 215.382];
map[59].adjacent = [38, 58];
map[60].position = [576.46, 249.194];
map[60].adjacent = [58, 175, 176, 61];
map[61].adjacent = [60, 62];
map[61].number = 68;
map[62].adjacent = [61, 156, 63];
map[63].position = [544.093, 198.554];
map[63].adjacent = [56, 62, 156, 64];
map[64].position = [536.812, 172.243];
map[64].adjacent = [63, 85, 65];
map[64].number = 54;
map[65].position = [527.195, 134.57];
map[65].adjacent = [55, 64, 84, 66];
map[66].adjacent = [65, 67];
map[66].number = 14;
map[67].position = [487.324, 111.511];
map[67].adjacent = [66, 83, 75, 68];
map[68].position = [482.083, 86.94];
map[68].adjacent = [67, 69];
map[68].number = 13;
map[69].position = [480.215, 63.265];
map[69].adjacent = [11, 68, 70];
map[70].position = [427.179, 62.813];
map[70].adjacent = [69, 71];
map[70].number = 12;
map[71].position = [375.056, 63.27];
map[71].adjacent = [70, 73, 118, 72];
map[72].position = [374.561, 44.226];
map[72].adjacent = [9, 71];
map[72].number = 4;
map[73].position = [376.942, 97.838];
map[73].adjacent = [74, 115, 71];
map[74].position = [387.5, 133];
map[74].adjacent = [75, 76, 73];
map[74].number = 30;
map[75].adjacent = [67, 74];
map[76].position = [392.097, 150.358];
map[76].adjacent = [80, 77, 108, 74];
map[77].position = [401.447, 179.02];
map[77].adjacent = [80, 78, 100, 76];
map[78].position = [413.033, 208.379];
map[78].adjacent = [79, 98, 77];
map[79].position = [423.873, 224.09];
map[79].adjacent = [93, 78];
map[79].number = 66;
map[80].position = [430.121, 167.884];
map[80].adjacent = [81, 77, 76];
map[80].number = 50;
map[81].position = [466.518, 156.051];
map[81].adjacent = [82, 88, 80];
map[82].position = [481.717, 150.67];
map[82].adjacent = [84, 87, 81];
map[82].number = 31;
map[83].position = [491.875, 128.324];
map[83].adjacent = [84, 67];
map[83].number = 32;
map[84].position = [496.466, 144.771];
map[84].adjacent = [65, 85, 82, 83];
map[85].position = [507, 182.5];
map[85].adjacent = [64, 86, 84];
map[86].position = [493.154, 186.29];
map[86].adjacent = [85, 89, 88, 87];
map[86].number = 52;
map[87].position = [486.147, 169.047];
map[87].adjacent = [86, 82];
map[88].position = [478.843, 192.69];
map[88].adjacent = [86, 92, 81];
map[89].position = [508.745, 217.517];
map[89].adjacent = [156, 90, 86];
map[90].position = [483.365, 226.45];
map[90].adjacent = [89, 91];
map[90].number = 67;
map[91].position = [456.271, 234.85];
map[91].adjacent = [90, 93, 92];
map[92].position = [447.086, 203.892];
map[92].adjacent = [88, 91];
map[92].number = 51;
map[93].position = [434.843, 241.648];
map[93].adjacent = [91, 183, 94, 79];
map[94].position = [403.118, 248.558];
map[94].adjacent = [93, 188, 95];
map[94].number = 65;
map[95].position = [365.489, 258.639];
map[95].adjacent = [94, 188, 101, 96];
map[96].position = [360.973, 238.969];
map[96].adjacent = [95, 97];
map[96].number = 63;
map[97].position = [356.144, 220.001];
map[97].adjacent = [98, 96, 104, 99];
map[98].adjacent = [78, 97];
map[98].number = 64;
map[99].position = [347.121, 190.035];
map[99].adjacent = [100, 97, 105];
map[100].position = [375.554, 184.27];
map[100].adjacent = [77, 99];
map[100].number = 49;
map[101].position = [338.063, 264.153];
map[101].adjacent = [95, 102];
map[101].number = 82;
map[102].position = [315.672, 266.308];
map[102].adjacent = [101, 193, 142, 103];
map[103].position = [305.67, 246.136];
map[103].adjacent = [102, 104];
map[103].number = 62;
map[104].position = [295.209, 227.363];
map[104].adjacent = [97, 103, 105];
map[105].position = [279.807, 196.965];
map[105].adjacent = [99, 104, 106];
map[105].number = 48;
map[106].position = [261.585, 166.597];
map[106].adjacent = [107, 105, 153, 149, 109];
map[107].position = [306.543, 162.009];
map[107].adjacent = [108, 106];
map[108].position = [351.198, 155.928];
map[108].adjacent = [76, 107];
map[108].number = 29;
map[109].position = [260.012, 146.883];
map[109].adjacent = [106, 148, 110];
map[110].position = [257.766, 128.37];
map[110].adjacent = [111, 109, 119];
map[110].number = 28;
map[111].position = [257.201, 101.384];
map[111].adjacent = [112, 113, 110, 119];
map[112].position = [258.358, 75.457];
map[112].adjacent = [5, 116, 111];
map[113].position = [278.48, 100.871];
map[113].adjacent = [114, 111];
map[113].number = 8;
map[114].position = [302.139, 99.816];
map[114].adjacent = [116, 115, 113];
map[115].position = [335.569, 98.956];
map[115].adjacent = [73, 114];
map[115].number = 10;
map[116].position = [303.601, 82.339];
map[116].adjacent = [117, 114, 112];
map[116].number = 9;
map[117].position = [305.252, 62.62];
map[117].adjacent = [7, 118, 116];
map[118].position = [339.5, 64.746];
map[118].adjacent = [71, 117];
map[118].number = 11;
map[119].position = [179.331, 117.184];
map[119].adjacent = [4, 111, 110, 147, 120];
map[119].number = 26;
map[120].position = [147.198, 120.706];
map[120].adjacent = [121, 119, 127, 122];
map[121].adjacent = [2, 120];
map[121].number = 7;
map[122].position = [123.123, 122.758];
map[122].adjacent = [123, 120, 125, 124];
map[123].position = [124.981, 95.227];
map[123].adjacent = [1, 122];
map[123].number = 6;
map[124].position = [97.434, 123.226];
map[124].adjacent = [0, 122, 126];
map[124].number = 24;
map[125].position = [121.302, 149.73];
map[125].adjacent = [122, 127, 126];
map[125].number = 25;
map[126].position = [96.947, 156.428];
map[126].adjacent = [124, 125, 128];
map[127].position = [141.065, 170.593];
map[127].adjacent = [120, 146, 125];
map[128].position = [109.521, 186.653];
map[128].adjacent = [146, 132, 129, 126];
map[129].position = [85.464, 186.168];
map[129].adjacent = [128, 130];
map[130].position = [81.305, 204.817];
map[130].adjacent = [129, 131];
map[130].number = 43;
map[131].position = [103.283, 214.213];
map[131].adjacent = [132, 130];
map[132].position = [126.199, 222.985];
map[132].adjacent = [133, 131, 128]; // 146?
map[133].position = [131.58, 240.128];
map[133].adjacent = [134, 132];
map[133].number = 59;
map[134].position = [139.255, 259.624];
map[134].adjacent = [137, 135, 133];
map[135].position = [150.425, 291.871];
map[135].adjacent = [136, 220, 134];
map[136].position = [175.845, 317.661];
map[136].adjacent = [140, 204, 135];
map[137].position = [159.146, 249.17];
map[137].adjacent = [138, 134];
map[137].number = 60;
map[138].position = [181.473, 254.743];
map[138].adjacent = [139, 137];
map[139].position = [195.625, 275.734];
map[139].adjacent = [143, 140, 138];
map[140].position = [203.623, 295.931];
map[140].adjacent = [141, 136, 139];
map[140].number = 78;
map[141].position = [224.357, 288.687];
map[141].position = [224.357, 288.687];
map[141].adjacent = [142, 202, 140, 143];
map[142].position = [266.833, 272.999];
map[142].adjacent = [102, 197, 141];
map[142].number = 80;
map[143].position = [212.331, 268.982];
map[143].adjacent = [141,139, 144];
map[143].number = 79;
map[144].position = [197.394, 231.044];
map[144].adjacent = [143, 145];
map[145].position = [179.174, 179.789];
map[145].adjacent = [149, 144, 146, 147];
map[146].position = [150.192, 183.304];
map[146].adjacent = [147, 145, 128, 127]; //132?
map[146].number = 44;
map[147].position = [172.653, 161.091];
map[147].adjacent = [119, 148, 145, 146];
map[148].position = [213.69, 154.246];
map[148].adjacent = [109, 147];
map[148].number = 27;
map[149].position = [216.444, 174.28];
map[149].adjacent = [106, 153, 145];
map[149].number = 46;
map[150].position = [261.804, 210.669];
map[150].adjacent = [155, 154, 151, 153];
map[150].number = 47;
map[151].position = [200.813, 203.002];
map[151].adjacent = [153, 150, 154];
map[151].number = 45;
map[152].position = [247.494, 249.275];
map[152].adjacent = [155, 154];
map[152].number = 61;
map[153].position = [258.709, 192.667];
map[153].adjacent = [106, 150, 151, 149];
map[154].position = [220.58, 235.819];
map[154].adjacent = [150, 155, 152, 151];
map[155].position = [266.167, 229.333];
map[155].adjacent = [152, 154, 150];
map[156].position = [526.666, 208.597];
map[156].adjacent = [63, 62, 89];
map[156].number = 53;
map[157].position = [955.807, 160.448];
map[157].adjacent = [158, 26];
map[158].position = [961.772, 212.932];
map[158].adjacent = [159, 157];
map[158].number = 77;
map[159].position = [909.123, 220.225];
map[159].adjacent = [158, 395, 160];
map[160].adjacent = [159, 161];
map[160].number = 76;
map[161].position = [855.453, 227.193];
map[161].adjacent = [160, 394, 167, 162];
map[162].position = [850.1, 191.149];
map[162].adjacent = [161, 165, 163];
map[163].position = [843.433, 171.139];
map[163].adjacent = [162, 164, 31];
map[163].number = 58;
map[164].position = [780.73, 193.398];
map[164].adjacent = [163, 165, 33];
map[165].position = [785.616, 213.65];
map[165].adjacent = [162, 166, 164];
map[165].number = 73;
map[166].position = [789.134, 238.621];
map[166].adjacent = [167, 391, 168, 165];
map[167].adjacent = [161, 166];
map[167].number = 74;
map[168].adjacent = [166, 169];
map[168].number = 72;
map[169].adjacent = [168, 389, 170];
map[170].adjacent = [169, 374, 171];
map[170].number = 71;
map[171].adjacent = [170, 373, 172];
map[172].adjacent = [171, 173];
map[172].number = 70;
map[173].adjacent = [172, 354, 174];
map[174].position = [636.772, 259.452];
map[174].adjacent = [173, 352, 175];
map[174].number = 69;
map[175].position = [598.973, 261.77];
map[175].adjacent = [174, 351, 60];
map[176].position = [552.199, 267.938];
map[176].adjacent = [60, 177];
map[176].number = 86;
map[177].position = [532.617, 283.068];
map[177].adjacent = [176, 309, 178];
map[178].position = [487.257, 316.009];
map[178].adjacent = [177, 179, 180];
map[179].position = [491.353, 340.464];
map[179].adjacent = [304, 185, 178];
map[179].number = 100;
map[180].position = [473.627, 324.593];
map[180].adjacent = [178, 184, 181];
map[181].position = [462.446, 305.02];
map[181].adjacent = [180, 182];
map[182].position = [454.111, 283.238];
map[182].adjacent = [181, 183];
map[182].number = 84;
map[183].position = [445.857, 261.441];
map[183].adjacent = [182, 93];
map[184].position = [457.783, 336.616];
map[184].adjacent = [180, 185];
map[184].number = 99;
map[185].position = [442.481, 350.08];
map[185].adjacent = [184, 179, 189, 186];
map[186].position = [418.577, 332.896];
map[186].adjacent = [185, 187];
map[187].position = [405.613, 308.989];
map[187].adjacent = [186, 188];
map[187].number = 83;
map[188].position = [392.178, 285.662];
map[188].adjacent = [94, 187, 95];
map[189].position = [409.464, 368.453];
map[189].adjacent = [185, 190];
map[189].number = 120;
map[190].position = [377.44, 387.167];
map[190].position = [377.44, 387.167];
map[190].adjacent = [189, 274, 273, 194, 191];
map[191].position = [366.463, 364.039];
map[191].adjacent = [190, 192];
map[192].position = [352.397, 336.63];
map[192].adjacent = [191, 193];
map[192].number = 98;
map[193].position = [334.239, 302.941];
map[193].adjacent = [192, 102];
map[194].position = [348.631, 405.333];
map[194].adjacent = [190, 195, 198];
map[194].number = 118;
map[195].position = [313.509, 323.662];
map[195].adjacent = [194, 196];
map[196].position = [285.578, 314.414];
map[196].adjacent = [195, 197];
map[196].number = 81;
map[197].position = [303.314, 304.128];
map[197].adjacent = [196, 142];
map[198].position = [305.854, 427.408];
map[198].adjacent = [194, 270, 208, 199];
map[199].position = [293.517, 408.539];
map[199].adjacent = [198, 200];
map[200].position = [276.298, 382.97];
map[200].adjacent = [199, 201];
map[200].number = 117;
map[201].position = [261.066, 356.957];
map[201].adjacent = [200, 202];
map[202].position = [240.767, 321.489];
map[202].adjacent = [201, 203, 141];
map[202].number = 97;
map[203].position = [197.502, 343.837];
map[203].adjacent = [202, 205, 204];
map[204].position = [187.315, 330.266];
map[204].adjacent = [203, 218, 136];
map[204].number = 96;
map[205].position = [216.024, 364.064];
map[205].adjacent = [206, 216, 203];
map[206].position = [239.438, 386.555];
map[206].adjacent = [207, 205];
map[206].number = 116;
map[207].position = [260.155, 411.997];
map[207].adjacent = [208, 206];
map[208].position = [282.497, 440.743];
map[208].position = [282.497, 440.743];
map[208].adjacent = [198, 270, 267, 209, 207];
map[209].position = [250.356, 459.283];
map[209].adjacent = [208, 210];
map[209].number = 139;
map[210].position = [215.854, 478.882];
map[210].adjacent = [209, 239, 211];
map[211].position = [185.72, 496.33];
map[211].adjacent = [210, 239, 235, 212];
map[212].adjacent = [211, 213];
map[212].number = 138;
map[213].adjacent = [214, 212, 223];
map[214].adjacent = [215, 213];
map[214].number = 137;
map[215].adjacent = [216, 214, 217];
map[216].adjacent = [205, 215];
map[216].number = 115;
map[217].adjacent = [218, 215, 223];
map[217].number = 114;
map[218].adjacent = [204, 217, 219];
map[219].position = [116.052, 339.805];
map[219].adjacent = [220, 218, 221];
map[220].position = [132.473, 318.3];
map[220].adjacent = [135, 219];
map[220].number = 95;
map[221].position = [67.459, 378.21];
map[221].adjacent = [219, 222, 227];
map[222].adjacent = [223, 221];
map[222].number = 113;
map[223].adjacent = [217, 213, 224, 222];
map[224].adjacent = [223, 233, 230, 225];
map[225].adjacent = [224, 226];
map[225].number = 135;
map[226].position = [57.318, 413.533];
map[226].adjacent = [225, 228, 227];
map[227].position = [48.396, 400.671];
map[227].adjacent = [221, 226];
map[227].number = 112;
map[228].position = [52.935, 496.219];
map[228].adjacent = [230, 229, 226];
map[229].position = [47.167, 527.334];
map[229].adjacent = [228, 237];
map[229].number = 162;
map[230].adjacent = [224, 231, 228];
map[230].number = 148;
map[231].adjacent = [232, 237, 230];
map[232].adjacent = [234, 231];
map[232].number = 149;
map[233].adjacent = [234, 224];
map[233].number = 136;
map[234].adjacent = [235, 232, 233];
map[235].position = [162.643, 510.949];
map[235].adjacent = [211, 238, 236, 234];
map[236].position = [144.466, 521.192];
map[236].adjacent = [235, 237];
map[236].number = 163;
map[237].position = [131.273, 528.035];
map[237].adjacent = [236, 229, 231];
map[238].position = [166.352, 574.741];
map[238].adjacent = [240, 235];
map[238].number = 174;
map[239].adjacent = [210, 240, 211];
map[239].number = 164;
map[240].position = [210.777, 569.053];
map[240].adjacent = [242, 241, 238, 239];
map[241].position = [218.994, 617.256];
map[241].adjacent = [428, 240, 242];
map[242].adjacent = [243, 241, 240];
map[243].adjacent = [244, 242];
map[243].number = 175;
map[244].adjacent = [245, 243];
map[245].position = [281.977, 608.348];
map[245].adjacent = [246, 428, 244];
map[246].position = [322.252, 602.65];
map[246].adjacent = [247, 245, 265];
map[247].position = [329.834, 655];
map[247].adjacent = [248, 246]; // Replaced by 338
map[248].position = [381.812, 642.921];
map[248].adjacent = [249, 247];
map[248].number = 190;
map[249].position = [427.261, 633.631];
map[249].adjacent = [283, 248, 250];
map[250].adjacent = [255, 249, 251, 253];
map[251].adjacent = [250, 252];
map[251].number = 189;
map[252].adjacent = [253, 251, 260];
map[253].adjacent = [254, 250, 252, 258];
map[253].number = 178;
map[254].adjacent = [255, 253, 256];
map[255].adjacent = [250, 254];
map[255].number = 179;
map[256].adjacent = [254, 257];
map[256].number = 167;
map[257].adjacent = [256, 258, 261, 262];
map[258].adjacent = [253, 259, 257];
map[259].adjacent = [258, 260];
map[259].number = 177;
map[260].adjacent = [259, 252, 261];
map[261].adjacent = [257, 260];
map[261].number = 165;
map[262].adjacent = [279, 257, 263];
map[263].adjacent = [262, 264];
map[263].number = 166;
map[264].position = [312.619, 532.049];
map[264].adjacent = [263, 265, 266];
map[265].position = [316.846, 565.328];
map[265].adjacent = [246, 264];
map[265].number = 176;
map[266].position = [305.833, 508];
map[266].adjacent = [268, 264, 267];
map[267].position = [298.376, 476.695];
map[267].adjacent = [266, 208];
map[267].number = 150;
map[268].adjacent = [269, 266];
map[269].adjacent = [271, 268, 270];
map[269].number = 151;
map[270].adjacent = [269, 208, 198];
map[271].adjacent = [276, 277, 269, 272];
map[272].adjacent = [275, 271, 273];
map[273].adjacent = [272, 190];
map[273].number = 119;
map[274].position = [432.257, 399.289];
map[274].adjacent = [302, 275, 190];
map[275].adjacent = [274, 276, 272];
map[275].number = 121;
map[276].adjacent = [271, 275];
map[277].adjacent = [278, 271];
map[277].number = 153;
map[278].adjacent = [289, 280, 279, 277];
map[279].adjacent = [278, 262];
map[279].number = 152;
map[280].adjacent = [287, 281, 278];
map[281].adjacent = [282, 280];
map[281].number = 180;
map[282].position = [497.493, 616.318];
map[282].adjacent = [284, 283, 281];
map[283].position = [462.402, 624.718];
map[283].adjacent = [282, 249];
map[283].number = 191;
map[284].position = [521.834, 600.667];
map[284].adjacent = [295, 282, 285];
map[285].adjacent = [284, 286];
map[285].number = 169;
map[286].adjacent = [293, 285, 287, 288];
map[287].adjacent = [286, 280];
map[287].number = 168;
map[288].adjacent = [286, 289];
map[288].number = 154;
map[289].adjacent = [290, 288, 278];
map[290].adjacent = [291, 289];
map[290].number = 140;
map[291].position = [501.686, 431.922];
map[291].adjacent = [300, 292, 290];
map[292].position = [505.81, 449.033];
map[292].adjacent = [323, 293, 291];
map[293].position = [516.08, 522.667];
map[293].adjacent = [294, 286, 292];
map[293].number = 170;
map[294].position = [525.256,556];
map[294].adjacent = [296, 295, 293];
map[295].position = [528.838, 577.003];
map[295].adjacent = [284, 294];
map[295].number = 181;
map[296].position = [559.201, 552.567];
map[296].adjacent = [297, 294, 298];
map[297].position = [562.165, 591.988];
map[297].adjacent = [326, 296];
map[297].number = 182;
map[298].position = [555.132, 492.038];
map[298].adjacent = [296, 299];
map[298].number = 155;
map[299].position = [551.145, 444.536];
map[299].adjacent = [298, 323, 300];
map[300].position = [528.521, 406.976];
map[300].adjacent = [338, 299, 291, 301, 304, 305];
map[301].position = [491.986, 402.593];
map[301].adjacent = [300, 302];
map[301].number = 123;
map[302].position = [463.501, 401.544];
map[302].adjacent = [303, 301, 274];
map[303].position = [483.338, 381.448];
map[303].adjacent = [304, 302];
map[303].number = 122;
map[304].position = [505.307, 370.729];
map[304].adjacent = [305, 300, 303, 179];
map[305].position = [524.176, 381.173];
map[305].adjacent = [306, 300, 304];
map[306].position = [548.575, 371.695];
map[306].adjacent = [305, 307];
map[306].number = 124;
map[307].position = [536.392, 345.306];
map[307].adjacent = [308, 306];
map[308].position = [561.468, 329.271];
map[308].adjacent = [310, 311, 307, 309];
map[309].position = [549.507, 306.529];
map[309].adjacent = [308, 177];
map[309].number = 85;
map[310].position = [596.833, 317.667];
map[310].adjacent = [312, 308];
map[310].number = 101;
map[311].position = [580.98, 374.957];
map[311].adjacent = [312, 313, 308];
map[311].number = 126;
map[312].position = [614.169, 375];
map[312].adjacent = [350, 314, 311, 310];
map[313].position = [584.249, 410.765];
map[313].adjacent = [314, 338, 311];
map[314].position = [613.988, 414.486];
map[314].adjacent = [312, 349, 315, 313];
map[315].position = [611.323, 446.643];
map[315].adjacent = [314, 316, 317];
map[316].adjacent = [348, 315];
map[316].number = 142;
map[317].position = [606.485, 476.999];
map[317].adjacent = [315, 318];
map[317].number = 156;
map[318].position = [593.397, 509.925];
map[318].adjacent = [317, 319, 320];
map[319].adjacent = [345, 318];
map[319].number = 157;
map[320].position = [583.215, 529.671];
map[320].adjacent = [318, 321];
map[321].position = [585.428, 551.306];
map[321].adjacent = [322, 325, 320];
map[322].adjacent = [344, 321];
map[322].number = 171;
map[323].adjacent = [299, 292]; // Replaces duplicate 233
map[323].number = 141;
map[324].adjacent = [344, 343, 325];
map[325].position = [586.619, 562.958];
map[325].adjacent = [324, 330, 326, 321];
map[325].number = 183;
map[326].position = [589.03, 586.518];
map[326].adjacent = [330, 327, 297, 325];
map[327].position = [593.868, 623.905];
map[327].adjacent = [328, 326];
map[327].number = 192;
map[328].position = [621.167, 637.678];
map[328].adjacent = [335, 327, 329];
map[329].adjacent = [328, 330];
map[329].number = 184;
map[330].adjacent = [331, 329, 326, 325];
map[331].adjacent = [343, 332, 330];
map[332].adjacent = [333, 334, 331];
map[333].adjacent = [340, 332];
map[333].number = 186;
map[334].adjacent = [339, 335, 332];
map[334].number = 193;
map[335].position = [644.832, 641.329];
map[335].adjacent = [336, 328, 334];
map[336].position = [669.483, 639.679];
map[336].adjacent = [337, 335];
map[336].number = 194;
map[337].position = [694.489, 638.004];
map[337].adjacent = [339, 366, 336];
map[338].position = [560.25, 406.924];
map[338].adjacent = [313, 300]; // Replaces duplicate 247
map[338].number = 125;
map[339].adjacent = [340, 337, 334];
map[340].adjacent = [341, 339, 333];
map[341].adjacent = [342, 340];
map[341].number = 187;
map[342].adjacent = [364, 365, 341, 343, 363];
map[343].adjacent = [363, 342, 331, 324, 344];
map[343].number = 185;
map[344].adjacent = [343, 324, 322, 345];
map[345].adjacent = [361, 344, 319, 346];
map[346].adjacent = [345, 347];
map[346].number = 158;
map[347].adjacent = [346, 348];
map[348].adjacent = [347, 316, 349];
map[349].position = [650.5, 415.061];
map[349].adjacent = [357, 348, 314, 350];
map[349].number = 143;
map[350].position = [635.813, 372.804];
map[350].adjacent = [353, 349, 312, 351];
map[351].position = [621.607, 323.961];
map[351].adjacent = [350, 175];
map[351].number = 102;
map[352].position = [644.938, 313.03];
map[352].adjacent = [353, 174];
map[353].position = [653.538, 369.46];
map[353].adjacent = [355, 350, 352];
map[353].number = 127;
map[354].position = [663.628, 319.606];
map[354].adjacent = [355, 173];
map[354].number = 103;
map[355].position = [669.835, 367.001];
map[355].adjacent = [356, 353, 354];
map[356].position = [672.759, 390.675];
map[356].adjacent = [357, 355];
map[356].number = 128;
map[357].position = [680,415.524];
map[357].adjacent = [358, 359, 349, 356];
map[358].position = [696.75, 415.788];
map[358].adjacent = [369, 357];
map[358].number = 144;
map[359].adjacent = [360, 357];
map[360].adjacent = [368, 364, 361, 359];
map[360].number = 159;
map[361].adjacent = [360, 362, 345];
map[362].adjacent = [363, 361];
map[362].number = 172;
map[363].adjacent = [342, 343, 362];
map[364].adjacent = [365, 342, 360];
map[365].position = [718.446, 562.326];
map[365].adjacent = [366, 342, 364, 367];
map[366].position = [720.199, 636.281];
map[366].adjacent = [337, 365];
map[366].number = 195;
map[367].position = [717.77, 533.794];
map[367].adjacent = [365, 368];
map[367].number = 173;
map[368].position = [716.064, 502.229];
map[368].adjacent = [369, 379, 367, 360];
map[369].position = [713.5, 416.052];
map[369].adjacent = [377, 368, 358, 370];
map[370].adjacent = [369, 371];
map[370].number = 129;
map[371].adjacent = [375, 370, 372];
map[372].adjacent = [371, 373];
map[373].adjacent = [372, 171];
map[373].number = 87;
map[374].position = [658.207, 259.195];
map[374].adjacent = [375, 170];
map[375].adjacent = [387, 376, 371, 374];
map[375].number = 104;
map[376].adjacent = [377, 375];
map[377].position = [740.75, 417.48];
map[377].adjacent = [385, 378, 369, 376];
map[377].number = 145;
map[378].adjacent = [377, 379];
map[379].position = [741.797, 500.651];
map[379].adjacent = [378, 380, 368];
map[379].number = 160;
map[380].position = [743.84, 531.048];
map[380].adjacent = [381, 379];
map[381].position = [770.464, 530.252];
map[381].adjacent = [382, 380];
map[382].position = [770.878, 468.163];
map[382].adjacent = [384, 383, 381];
map[382].number = 161;
map[383].position = [793.69, 468.369];
map[383].adjacent = [427, 382];
map[384].adjacent = [385, 382];
map[385].position = [767.25, 417.779];
map[385].adjacent = [427, 384, 377, 386];
map[386].adjacent = [385, 387];
map[386].number = 130;
map[387].adjacent = [390, 386, 375, 388];
map[388].adjacent = [387, 389];
map[389].adjacent = [388, 169];
map[389].number = 88;
map[390].adjacent = [403, 387];
map[390].number = 105;
map[391].position = [793.323, 268.352];
map[391].adjacent = [392, 401, 166];
map[392].adjacent = [393, 391];
map[392].number = 90;
map[393].position = [859.95, 257.119];
map[393].adjacent = [395, 399, 392, 394];
map[394].position = [857.77, 242.509];
map[394].adjacent = [393, 161];
map[394].number = 75;
map[395].position = [914.125, 247.76];
map[395].adjacent = [396, 393, 159];
map[396].position = [928.949, 261.756];
map[396].adjacent = [397, 395];
map[396].number = 94;
map[397].position = [932.887, 277.75];
map[397].adjacent = [408, 398, 396];
map[398].adjacent = [397, 399];
map[398].number = 93;
map[399].position = [863.657, 287.638];
map[399].adjacent = [398, 406, 400, 393];
map[400].adjacent = [399, 402];
map[400].number = 91;
map[401].position = [795.572, 284.318];
map[401].adjacent = [402, 391];
map[401].number = 89;
map[402].position = [797.636, 298.97];
map[402].adjacent = [400, 403, 401];
map[403].position = [801.773, 328.337];
map[403].adjacent = [404, 414, 390, 402];
map[404].adjacent = [405, 403];
map[404].number = 107;
map[405].position = [868.885, 316.949];
map[405].adjacent = [407, 411, 404, 406];
map[406].position = [866.338, 302.669];
map[406].adjacent = [405, 399];
map[406].number = 92;
map[407].adjacent = [408, 405];
map[407].number = 109;
map[408].adjacent = [409, 407, 397];
map[408].position = [938.053, 307.25];
map[409].position = [945.284, 335.763];
map[409].adjacent = [419, 410, 408];
map[410].adjacent = [409, 411];
map[410].number = 110;
map[411].position = [872.2, 347.031];
map[411].adjacent = [410, 417, 412, 405];
map[412].adjacent = [411, 413];
map[412].number = 108;
map[413].position = [805.989, 358.263];
map[413].adjacent = [412, 415, 414];
map[414].position = [803.74, 342.297];
map[414].adjacent = [413, 403];
map[414].number = 106;
map[415].position = [810.317, 388.984];
map[415].adjacent = [416, 426, 413];
map[416].position = [877.068, 377.109];
map[416].adjacent = [418, 423, 415, 417];
map[417].position = [874.837, 362.77];
map[417].adjacent = [416, 411];
map[417].number = 132;
map[418].adjacent = [420, 416];
map[418].number = 134;
map[419].position = [951.987, 355.267];
map[419].adjacent = [420, 409];
map[419].number = 111;
map[420].position = [958.146, 376.506];
map[420].adjacent = [421, 418, 419];
map[421].position = [964.25, 423.75];
map[421].adjacent = [422, 420];
map[421].number = 147;
map[422].position = [883.75, 420.732];
map[422].adjacent = [421, 424, 423];
map[423].position = [880.125, 399.675];
map[423].adjacent = [422, 416];
map[423].number = 133;
map[424].position = [848.75, 419.617];
map[424].adjacent = [422, 425];
map[424].number = 146;
map[425].adjacent = [424, 427, 426];
map[426].adjacent = [425, 415];
map[426].position = [812.388, 403.674];
map[426].number = 131;
map[427].position = [798, 419.126];
map[427].adjacent = [425, 383, 385];
map[428].position = [249, 613.012];
map[428].adjacent = [245, 241];
map[428].number = 188;

function debugMap() {
	var errorCount = 0;
	for (a = 0; a < map.length; a++) { // For every place
		for (b = 0; b < map[a].adjacent.length; b++) { // For every adjacent place
			if (a != map[a].adjacent[b]) { // If the adjacent place is not same as the place
				if (map[map[a].adjacent[b]].adjacent.indexOf(a) == -1) { // If the adjacent place has a connection back
					errorCount++;
					console.log(errorCount + ': Point ' + map[a].adjacent[b] + ' does not connect to point ' + a);
				}
			} else { // If the adjacent place is the same as the place
				errorCount++;
				console.log(errorCount + ': Point ' + a + ' connects to itself');
			}
		}
	}
	return errorCount++ + ' errors';
}